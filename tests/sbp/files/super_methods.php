<?php /* Generated By SBP */  
 
class Foo {
	private $bar = '1s7zz05'; 
	private $baz = 'abcd'; 
 
	public function match($suffix) {
		return  preg_match('`^[a-z]+'.$suffix.'$`', $this->bar) or preg_match('`^[a-z]+'.$suffix.'$`', $this->baz); 
 
	} public function match_all($suffix) {
		return  preg_match('`^[a-z]+'.$suffix.'$`', $this->bar) and preg_match('`^[a-z]+'.$suffix.'$`', $this->baz); 
 
}}echo (new \Sbp\Handler(5))->sqrt() . "\n"; 
echo (new \Sbp\Handler(5))->pow(4) . "\n"; 
 
$array = array( 
	 'toto' => 4, 
	 'tata' => 5, 
	 'lulu' => 6 
); 
echo (new \Sbp\Handler((new \Sbp\Handler($array))->keys()))->implode(', ') . "\n"; 
 
echo (new \Sbp\Handler((new \Sbp\Handler(array( 
	 'toto' => 4, 
	 'tata' => 5, 
	 'lulu' => 6 
)))->keys()))->implode(', ') . "\n"; 
 
echo (new \Sbp\Handler("AbcdEF"))->replace('/[a-z]/', '#') . "\n"; 
 
echo (new \Sbp\Handler([1, 3, 7]))->sum() . "\n"; 
 
function array_custom($array, $a, $b) {
    $array[] = $a+$b; 
    return  $array; 
 
}function str_custom($string, $a, $b) {
    $string .= $a+$b; 
    return  $string; 
 
}print_r((new \Sbp\Handler([5]))->custom(1, 2)); 
 
echo (new \Sbp\Handler("yoh-toh-pouf-paf"))->match('/-\\w/', $matches) . "\n"; 
 
echo (new \Sbp\Handler("yoh-toh-pouf-paf"))->match_all('/-\\w/', $matches, PREG_PATTERN_ORDER, 5) . "\n"; 
 
echo (new \Sbp\Handler((new \Sbp\Handler("yoh-toh-pouf-paf"))->split('/-\\w/', 2)))->implode(':') . "\n"; 
 
echo (new \Sbp\Handler($matches[0]))->implode(', ') . "\n"; 
 
$foo = new Foo; 
 
echo (new \Sbp\Handler($foo))->match((new \Sbp\Handler("[a-z]"))->quote()) ? 'true' : 'false'; 
echo "\n"; 
 
echo (new \Sbp\Handler($foo))->match("[a-z]") ? 'true' : 'false'; 
echo "\n"; 
 
echo (new \Sbp\Handler($foo))->match_all("[a-z]") ? 'true' : 'false'; 
echo "\n"; 
 
echo (new \Sbp\Handler("abc"))->custom(1, 2) . "\n"; 
